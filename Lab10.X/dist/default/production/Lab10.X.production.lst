

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu May 06 15:46:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	functab,global,class=ENTRY,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212 ;; Function _recepcion is unused but had its address taken
   213  0000                     
   214                           	psect	idataBANK0
   215  01A4                     __pidataBANK0:
   216                           
   217                           ;initializer for _valores_ascii1
   218  01A4  3453               	retlw	83
   219  01A5  3445               	retlw	69
   220  01A6  344C               	retlw	76
   221  01A7  3445               	retlw	69
   222  01A8  3443               	retlw	67
   223  01A9  3443               	retlw	67
   224  01AA  3449               	retlw	73
   225  01AB  344F               	retlw	79
   226  01AC  344E               	retlw	78
   227  01AD  3441               	retlw	65
   228  01AE  3420               	retlw	32
   229  01AF  3455               	retlw	85
   230  01B0  344E               	retlw	78
   231  01B1  3441               	retlw	65
   232  01B2  3420               	retlw	32
   233  01B3  344F               	retlw	79
   234  01B4  3450               	retlw	80
   235  01B5  3443               	retlw	67
   236  01B6  3449               	retlw	73
   237  01B7  344F               	retlw	79
   238  01B8  344E               	retlw	78
   239                           
   240                           ;initializer for _valores_ascii2
   241  01B9  3431               	retlw	49
   242  01BA  3429               	retlw	41
   243  01BB  3420               	retlw	32
   244  01BC  3450               	retlw	80
   245  01BD  344F               	retlw	79
   246  01BE  3452               	retlw	82
   247  01BF  3454               	retlw	84
   248  01C0  3420               	retlw	32
   249  01C1  3442               	retlw	66
   250  000B                     _INTCONbits	set	11
   251  0018                     _RCSTAbits	set	24
   252  0008                     _PORTD	set	8
   253  0005                     _PORTA	set	5
   254  000C                     _PIR1bits	set	12
   255  001A                     _RCREG	set	26
   256  0019                     _TXREG	set	25
   257  008C                     _PIE1bits	set	140
   258  0099                     _SPBRG	set	153
   259  009A                     _SPBRGH	set	154
   260  008F                     _OSCCONbits	set	143
   261  0088                     _TRISD	set	136
   262  0085                     _TRISA	set	133
   263  0098                     _TXSTAbits	set	152
   264  0187                     _BAUDCTLbits	set	391
   265  0189                     _ANSELH	set	393
   266  0188                     _ANSEL	set	392
   267                           
   268                           	psect	strings
   269  0028                     __pstrings:
   270  0028                     stringtab:
   271  0028                     __stringtab:
   272  0028                     stringcode:	
   273                           ;	String table - string pointers are 1 byte each
   274                           
   275  0028                     stringdir:
   276  0028  3000               	movlw	high stringdir
   277  0029  008A               	movwf	10
   278  002A  0804               	movf	4,w
   279  002B  0A84               	incf	4,f
   280  002C  0782               	addwf	2,f
   281  002D                     __stringbase:
   282  002D  3400               	retlw	0
   283  002E                     __end_of__stringtab:
   284  002E                     STR_3:
   285  002E  3420               	retlw	32	;' '
   286  002F  3432               	retlw	50	;'2'
   287  0030  3429               	retlw	41	;')'
   288  0031  3420               	retlw	32	;' '
   289  0032  3450               	retlw	80	;'P'
   290  0033  344F               	retlw	79	;'O'
   291  0034  346E               	retlw	110	;'n'
   292  0035  3465               	retlw	101	;'e'
   293  0036  3472               	retlw	114	;'r'
   294  0037  3420               	retlw	32	;' '
   295  0038  3476               	retlw	118	;'v'
   296  0039  3461               	retlw	97	;'a'
   297  003A  346C               	retlw	108	;'l'
   298  003B  346F               	retlw	111	;'o'
   299  003C  3472               	retlw	114	;'r'
   300  003D  3465               	retlw	101	;'e'
   301  003E  3473               	retlw	115	;'s'
   302  003F  3420               	retlw	32	;' '
   303  0040  3465               	retlw	101	;'e'
   304  0041  346E               	retlw	110	;'n'
   305  0042  3420               	retlw	32	;' '
   306  0043  3450               	retlw	80	;'P'
   307  0044  344F               	retlw	79	;'O'
   308  0045  3472               	retlw	114	;'r'
   309  0046  3474               	retlw	116	;'t'
   310  0047  3441               	retlw	65	;'A'
   311  0048  3420               	retlw	32	;' '
   312  0049  340D               	retlw	13
   313  004A  3400               	retlw	0
   314  004B                     STR_4:
   315  004B  3420               	retlw	32	;' '
   316  004C  3433               	retlw	51	;'3'
   317  004D  3429               	retlw	41	;')'
   318  004E  3420               	retlw	32	;' '
   319  004F  3450               	retlw	80	;'P'
   320  0050  344F               	retlw	79	;'O'
   321  0051  346E               	retlw	110	;'n'
   322  0052  3465               	retlw	101	;'e'
   323  0053  3472               	retlw	114	;'r'
   324  0054  3420               	retlw	32	;' '
   325  0055  3476               	retlw	118	;'v'
   326  0056  3461               	retlw	97	;'a'
   327  0057  346C               	retlw	108	;'l'
   328  0058  346F               	retlw	111	;'o'
   329  0059  3472               	retlw	114	;'r'
   330  005A  3465               	retlw	101	;'e'
   331  005B  3473               	retlw	115	;'s'
   332  005C  3420               	retlw	32	;' '
   333  005D  3465               	retlw	101	;'e'
   334  005E  346E               	retlw	110	;'n'
   335  005F  3420               	retlw	32	;' '
   336  0060  3450               	retlw	80	;'P'
   337  0061  344F               	retlw	79	;'O'
   338  0062  3472               	retlw	114	;'r'
   339  0063  3474               	retlw	116	;'t'
   340  0064  3443               	retlw	67	;'C'
   341  0065  3420               	retlw	32	;' '
   342  0066  340D               	retlw	13
   343  0067  3400               	retlw	0
   344  0068                     STR_6:
   345  0068  3450               	retlw	80	;'P'
   346  0069  346F               	retlw	111	;'o'
   347  006A  346E               	retlw	110	;'n'
   348  006B  3465               	retlw	101	;'e'
   349  006C  3472               	retlw	114	;'r'
   350  006D  3420               	retlw	32	;' '
   351  006E  346C               	retlw	108	;'l'
   352  006F  346F               	retlw	111	;'o'
   353  0070  3473               	retlw	115	;'s'
   354  0071  3420               	retlw	32	;' '
   355  0072  3476               	retlw	118	;'v'
   356  0073  3461               	retlw	97	;'a'
   357  0074  346C               	retlw	108	;'l'
   358  0075  346F               	retlw	111	;'o'
   359  0076  3472               	retlw	114	;'r'
   360  0077  3465               	retlw	101	;'e'
   361  0078  3473               	retlw	115	;'s'
   362  0079  3420               	retlw	32	;' '
   363  007A  3465               	retlw	101	;'e'
   364  007B  346E               	retlw	110	;'n'
   365  007C  3420               	retlw	32	;' '
   366  007D  3450               	retlw	80	;'P'
   367  007E  346F               	retlw	111	;'o'
   368  007F  3472               	retlw	114	;'r'
   369  0080  3474               	retlw	116	;'t'
   370  0081  3441               	retlw	65	;'A'
   371  0082  343A               	retlw	58	;':'
   372  0083  3420               	retlw	32	;' '
   373  0084  3400               	retlw	0
   374  0085                     STR_8:
   375  0085  3450               	retlw	80	;'P'
   376  0086  346F               	retlw	111	;'o'
   377  0087  346E               	retlw	110	;'n'
   378  0088  3465               	retlw	101	;'e'
   379  0089  3472               	retlw	114	;'r'
   380  008A  3420               	retlw	32	;' '
   381  008B  346C               	retlw	108	;'l'
   382  008C  346F               	retlw	111	;'o'
   383  008D  3473               	retlw	115	;'s'
   384  008E  3420               	retlw	32	;' '
   385  008F  3476               	retlw	118	;'v'
   386  0090  3461               	retlw	97	;'a'
   387  0091  346C               	retlw	108	;'l'
   388  0092  346F               	retlw	111	;'o'
   389  0093  3472               	retlw	114	;'r'
   390  0094  3465               	retlw	101	;'e'
   391  0095  3473               	retlw	115	;'s'
   392  0096  3420               	retlw	32	;' '
   393  0097  3465               	retlw	101	;'e'
   394  0098  346E               	retlw	110	;'n'
   395  0099  3420               	retlw	32	;' '
   396  009A  3450               	retlw	80	;'P'
   397  009B  346F               	retlw	111	;'o'
   398  009C  3472               	retlw	114	;'r'
   399  009D  3474               	retlw	116	;'t'
   400  009E  3443               	retlw	67	;'C'
   401  009F  343A               	retlw	58	;':'
   402  00A0  3420               	retlw	32	;' '
   403  00A1  3400               	retlw	0
   404  00A2                     STR_1:
   405  00A2  340D               	retlw	13
   406  00A3  3420               	retlw	32	;' '
   407  00A4  3420               	retlw	32	;' '
   408  00A5  3451               	retlw	81	;'Q'
   409  00A6  3475               	retlw	117	;'u'
   410  00A7  3465               	retlw	101	;'e'
   411  00A8  3420               	retlw	32	;' '
   412  00A9  3471               	retlw	113	;'q'
   413  00AA  3475               	retlw	117	;'u'
   414  00AB  3469               	retlw	105	;'i'
   415  00AC  3465               	retlw	101	;'e'
   416  00AD  3472               	retlw	114	;'r'
   417  00AE  3465               	retlw	101	;'e'
   418  00AF  3420               	retlw	32	;' '
   419  00B0  3468               	retlw	104	;'h'
   420  00B1  3461               	retlw	97	;'a'
   421  00B2  3463               	retlw	99	;'c'
   422  00B3  3465               	retlw	101	;'e'
   423  00B4  3472               	retlw	114	;'r'
   424  00B5  3420               	retlw	32	;' '
   425  00B6  3420               	retlw	32	;' '
   426  00B7  340D               	retlw	13
   427  00B8  3400               	retlw	0
   428  00B9                     STR_2:
   429  00B9  3420               	retlw	32	;' '
   430  00BA  3431               	retlw	49	;'1'
   431  00BB  3429               	retlw	41	;')'
   432  00BC  3450               	retlw	80	;'P'
   433  00BD  346F               	retlw	111	;'o'
   434  00BE  346E               	retlw	110	;'n'
   435  00BF  3465               	retlw	101	;'e'
   436  00C0  3472               	retlw	114	;'r'
   437  00C1  3420               	retlw	32	;' '
   438  00C2  3463               	retlw	99	;'c'
   439  00C3  3461               	retlw	97	;'a'
   440  00C4  3472               	retlw	114	;'r'
   441  00C5  3461               	retlw	97	;'a'
   442  00C6  3463               	retlw	99	;'c'
   443  00C7  3474               	retlw	116	;'t'
   444  00C8  3465               	retlw	101	;'e'
   445  00C9  3472               	retlw	114	;'r'
   446  00CA  3465               	retlw	101	;'e'
   447  00CB  3473               	retlw	115	;'s'
   448  00CC  3420               	retlw	32	;' '
   449  00CD  340D               	retlw	13
   450  00CE  3400               	retlw	0
   451  00CF                     STR_7:
   452  00CF  340D               	retlw	13
   453  00D0  3420               	retlw	32	;' '
   454  00D1  344C               	retlw	76	;'L'
   455  00D2  3469               	retlw	105	;'i'
   456  00D3  3473               	retlw	115	;'s'
   457  00D4  3474               	retlw	116	;'t'
   458  00D5  346F               	retlw	111	;'o'
   459  00D6  3420               	retlw	32	;' '
   460  00D7  3463               	retlw	99	;'c'
   461  00D8  346F               	retlw	111	;'o'
   462  00D9  346D               	retlw	109	;'m'
   463  00DA  3470               	retlw	112	;'p'
   464  00DB  3461               	retlw	97	;'a'
   465  00DC  3464               	retlw	100	;'d'
   466  00DD  3472               	retlw	114	;'r'
   467  00DE  3465               	retlw	101	;'e'
   468  00DF  3420               	retlw	32	;' '
   469  00E0  340D               	retlw	13
   470  00E1  3400               	retlw	0
   471  00E2                     STR_5:
   472  00E2  3420               	retlw	32	;' '
   473  00E3  3457               	retlw	87	;'W'
   474  00E4  3465               	retlw	101	;'e'
   475  00E5  346E               	retlw	110	;'n'
   476  00E6  3461               	retlw	97	;'a'
   477  00E7  3473               	retlw	115	;'s'
   478  00E8  3420               	retlw	32	;' '
   479  00E9  340D               	retlw	13
   480  00EA  3400               	retlw	0
   481  00CF                     
   482                           	psect	cinit
   483  000F                     start_initialization:	
   484                           ; #config settings
   485                           
   486  000F                     __initialization:
   487                           
   488                           ; Initialize objects allocated to BANK0
   489  000F  1383               	bcf	3,7	;select IRP bank0
   490  0010  303E               	movlw	low (__pdataBANK0+30)
   491  0011  00FD               	movwf	btemp+-1
   492  0012  3001               	movlw	high __pidataBANK0
   493  0013  00FE               	movwf	btemp
   494  0014  30A4               	movlw	low __pidataBANK0
   495  0015  00FF               	movwf	btemp+1
   496  0016  3020               	movlw	low __pdataBANK0
   497  0017  0084               	movwf	4
   498  0018  120A  118A  21C6  120A  118A  	fcall	init_ram0
   499                           
   500                           ; Clear objects allocated to COMMON
   501  001D  01F7               	clrf	__pbssCOMMON& (0+127)
   502  001E                     end_of_initialization:	
   503                           ;End of C runtime variable initialization code
   504                           
   505  001E                     __end_of__initialization:
   506  001E  0183               	clrf	3
   507  001F  120A  118A  28EB   	ljmp	_main	;jump to C main() function
   508                           
   509                           	psect	bssCOMMON
   510  0077                     __pbssCOMMON:
   511  0077                     _valores:
   512  0077                     	ds	1
   513                           
   514                           	psect	dataBANK0
   515  0020                     __pdataBANK0:
   516  0020                     _valores_ascii1:
   517  0020                     	ds	21
   518  0035                     _valores_ascii2:
   519  0035                     	ds	9
   520                           
   521                           	psect	inittext
   522  01C2                     init_fetch0:	
   523                           ;	Called with low address in FSR and high address in W
   524                           
   525  01C2  087E               	movf	btemp,w
   526  01C3  008A               	movwf	10
   527  01C4  087F               	movf	btemp+1,w
   528  01C5  0082               	movwf	2
   529  01C6                     init_ram0:	
   530                           ;Called with:
   531                           ;	high address of idata address in btemp 
   532                           ;	low address of idata address in btemp+1 
   533                           ;	low address of data in FSR
   534                           ;	high address + 1 of data in btemp-1
   535                           
   536  01C6  120A  118A  21C2  120A  118A  	fcall	init_fetch0
   537  01CB  0080               	movwf	0
   538  01CC  0A84               	incf	4,f
   539  01CD  0804               	movf	4,w
   540  01CE  067D               	xorwf	btemp+-1,w
   541  01CF  1903               	btfsc	3,2
   542  01D0  3400               	retlw	0
   543  01D1  0AFF               	incf	btemp+1,f
   544  01D2  1903               	btfsc	3,2
   545  01D3  0AFE               	incf	btemp,f
   546  01D4  29C6               	goto	init_ram0
   547                           
   548                           	psect	cstackCOMMON
   549  0070                     __pcstackCOMMON:
   550  0070                     ?_setup:
   551  0070                     ?_isr:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_isr:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_transmision:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_cadena_datos:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_main:	
   564                           ; 1 bytes @ 0x0
   565                           
   566                           
   567                           ; 1 bytes @ 0x0
   568  0070                     	ds	2
   569  0072                     ??_setup:
   570  0072                     ??_transmision:	
   571                           ; 1 bytes @ 0x2
   572                           
   573  0072                     transmision@datos:	
   574                           ; 1 bytes @ 0x2
   575                           
   576                           
   577                           ; 1 bytes @ 0x2
   578  0072                     	ds	1
   579  0073                     ??_cadena_datos:
   580                           
   581                           ; 1 bytes @ 0x3
   582  0073                     	ds	1
   583  0074                     cadena_datos@str:
   584                           
   585                           ; 1 bytes @ 0x4
   586  0074                     	ds	1
   587  0075                     ??_main:
   588                           
   589                           ; 1 bytes @ 0x5
   590  0075                     	ds	2
   591                           
   592                           	psect	maintext
   593  00EB                     __pmaintext:	
   594 ;;
   595 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   596 ;;
   597 ;; *************** function _main *****************
   598 ;; Defined at:
   599 ;;		line 104 in file "Main_lab10.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : B00/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0
   615 ;;      Temps:          2       0       0       0       0
   616 ;;      Totals:         2       0       0       0       0
   617 ;;Total ram usage:        2 bytes
   618 ;; Hardware stack levels required when called:    3
   619 ;; This function calls:
   620 ;;		_cadena_datos
   621 ;;		_setup
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _main
   629  00EB                     _main:
   630  00EB                     l793:	
   631                           ;incstack = 0
   632                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   633                           
   634                           
   635                           ;Main_lab10.c: 106:     setup();
   636  00EB  120A  118A  215A  120A  118A  	fcall	_setup
   637  00F0                     l795:
   638                           
   639                           ;Main_lab10.c: 110:     {;Main_lab10.c: 111:        cadena_datos("\r  Que quiere hacer  
      +                          \r");
   640  00F0  3075               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   641  00F1  120A  118A  2185  120A  118A  	fcall	_cadena_datos
   642  00F6                     l797:
   643                           
   644                           ;Main_lab10.c: 112:        cadena_datos(" 1)Poner caracteres \r");
   645  00F6  308C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   646  00F7  120A  118A  2185  120A  118A  	fcall	_cadena_datos
   647  00FC                     l799:
   648                           
   649                           ;Main_lab10.c: 113:        cadena_datos(" 2) POner valores en POrtA \r");
   650  00FC  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   651  00FD  120A  118A  2185  120A  118A  	fcall	_cadena_datos
   652  0102                     l801:
   653                           
   654                           ;Main_lab10.c: 114:        cadena_datos(" 3) POner valores en POrtC \r");
   655  0102  301E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   656  0103  120A  118A  2185  120A  118A  	fcall	_cadena_datos
   657  0108                     l68:	
   658                           ;Main_lab10.c: 116:        while(PIR1bits.RCIF==0);
   659                           
   660  0108  1283               	bcf	3,5	;RP0=0, select bank0
   661  0109  1303               	bcf	3,6	;RP1=0, select bank0
   662  010A  1E8C               	btfss	12,5	;volatile
   663  010B  290D               	goto	u71
   664  010C  290E               	goto	u70
   665  010D                     u71:
   666  010D  2908               	goto	l68
   667  010E                     u70:
   668  010E                     l803:
   669                           
   670                           ;Main_lab10.c: 117:        valores = recepcion;
   671  010E  30D9               	movlw	(low (0-fpbase))& (0+255)
   672  010F  00F5               	movwf	??_main
   673  0110  0875               	movf	??_main,w
   674  0111  00F7               	movwf	_valores
   675                           
   676                           ;Main_lab10.c: 119:        switch(valores)
   677  0112  2944               	goto	l821
   678  0113                     l805:
   679                           
   680                           ;Main_lab10.c: 122:                cadena_datos(" Wenas \r");
   681  0113  30B5               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   682  0114  120A  118A  2185  120A  118A  	fcall	_cadena_datos
   683                           
   684                           ;Main_lab10.c: 123:                break;
   685  0119  28F0               	goto	l795
   686  011A                     l807:
   687                           
   688                           ;Main_lab10.c: 126:                cadena_datos("Poner los valores en PortA: ");
   689  011A  303B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   690  011B  120A  118A  2185  120A  118A  	fcall	_cadena_datos
   691  0120                     l75:	
   692                           ;Main_lab10.c: 127:                while(PIR1bits.RCIF==0);
   693                           
   694  0120  1283               	bcf	3,5	;RP0=0, select bank0
   695  0121  1303               	bcf	3,6	;RP1=0, select bank0
   696  0122  1E8C               	btfss	12,5	;volatile
   697  0123  2925               	goto	u81
   698  0124  2926               	goto	u80
   699  0125                     u81:
   700  0125  2920               	goto	l75
   701  0126                     u80:
   702  0126                     l809:
   703                           
   704                           ;Main_lab10.c: 128:                PORTA = recepcion;
   705  0126  30D9               	movlw	(low (0-fpbase))& (0+255)
   706  0127  0085               	movwf	5	;volatile
   707  0128                     l811:
   708                           
   709                           ;Main_lab10.c: 129:                cadena_datos("\r Listo compadre \r");
   710  0128  30A2               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   711  0129  120A  118A  2185  120A  118A  	fcall	_cadena_datos
   712                           
   713                           ;Main_lab10.c: 130:                break;
   714  012E  28F0               	goto	l795
   715  012F                     l813:
   716                           
   717                           ;Main_lab10.c: 133:                cadena_datos("Poner los valores en PortC: ");
   718  012F  3058               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   719  0130  120A  118A  2185  120A  118A  	fcall	_cadena_datos
   720  0135                     l79:	
   721                           ;Main_lab10.c: 134:                while(PIR1bits.RCIF==0);
   722                           
   723  0135  1283               	bcf	3,5	;RP0=0, select bank0
   724  0136  1303               	bcf	3,6	;RP1=0, select bank0
   725  0137  1E8C               	btfss	12,5	;volatile
   726  0138  293A               	goto	u91
   727  0139  293B               	goto	u90
   728  013A                     u91:
   729  013A  2935               	goto	l79
   730  013B                     u90:
   731  013B                     l815:
   732                           
   733                           ;Main_lab10.c: 135:                PORTD = recepcion;
   734  013B  30D9               	movlw	(low (0-fpbase))& (0+255)
   735  013C  0088               	movwf	8	;volatile
   736  013D                     l817:
   737                           
   738                           ;Main_lab10.c: 136:                cadena_datos("\r Listo compadre \r");
   739  013D  30A2               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   740  013E  120A  118A  2185  120A  118A  	fcall	_cadena_datos
   741                           
   742                           ;Main_lab10.c: 137:                break;
   743  0143  28F0               	goto	l795
   744  0144                     l821:
   745  0144  0877               	movf	_valores,w
   746  0145  00F5               	movwf	??_main
   747  0146  01F6               	clrf	??_main+1
   748                           
   749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   750                           ; Switch size 1, requested type "simple"
   751                           ; Number of cases is 1, Range of values is 0 to 0
   752                           ; switch strategies available:
   753                           ; Name         Instructions Cycles
   754                           ; simple_byte            4     3 (average)
   755                           ; direct_byte           11     8 (fixed)
   756                           ; jumptable            260     6 (fixed)
   757                           ;	Chosen strategy is simple_byte
   758  0147  0876               	movf	??_main+1,w
   759  0148  3A00               	xorlw	0	; case 0
   760  0149  1903               	skipnz
   761  014A  294C               	goto	l847
   762  014B  28F0               	goto	l795
   763  014C                     l847:
   764                           
   765                           ; Switch size 1, requested type "simple"
   766                           ; Number of cases is 3, Range of values is 49 to 51
   767                           ; switch strategies available:
   768                           ; Name         Instructions Cycles
   769                           ; simple_byte           10     6 (average)
   770                           ; direct_byte           20    11 (fixed)
   771                           ; jumptable            263     9 (fixed)
   772                           ;	Chosen strategy is simple_byte
   773  014C  0875               	movf	??_main,w
   774  014D  3A31               	xorlw	49	; case 49
   775  014E  1903               	skipnz
   776  014F  2913               	goto	l805
   777  0150  3A03               	xorlw	3	; case 50
   778  0151  1903               	skipnz
   779  0152  291A               	goto	l807
   780  0153  3A01               	xorlw	1	; case 51
   781  0154  1903               	skipnz
   782  0155  292F               	goto	l813
   783  0156  28F0               	goto	l795
   784  0157  120A  118A  280C   	ljmp	start
   785  015A                     __end_of_main:
   786                           
   787                           	psect	text1
   788  015A                     __ptext1:	
   789 ;; *************** function _setup *****************
   790 ;; Defined at:
   791 ;;		line 166 in file "Main_lab10.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    1
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _setup
   821  015A                     _setup:
   822  015A                     l691:	
   823                           ;incstack = 0
   824                           ; Regs used in _setup: [wreg+status,2+status,0]
   825                           
   826                           
   827                           ;Main_lab10.c: 169:     ANSEL = 0;
   828  015A  1683               	bsf	3,5	;RP0=1, select bank3
   829  015B  1703               	bsf	3,6	;RP1=1, select bank3
   830  015C  0188               	clrf	8	;volatile
   831                           
   832                           ;Main_lab10.c: 170:     ANSELH = 0;
   833  015D  0189               	clrf	9	;volatile
   834                           
   835                           ;Main_lab10.c: 173:     TRISA = 0;
   836  015E  1683               	bsf	3,5	;RP0=1, select bank1
   837  015F  1303               	bcf	3,6	;RP1=0, select bank1
   838  0160  0185               	clrf	5	;volatile
   839                           
   840                           ;Main_lab10.c: 174:     TRISD = 0;
   841  0161  0188               	clrf	8	;volatile
   842                           
   843                           ;Main_lab10.c: 176:     PORTA=0;
   844  0162  1283               	bcf	3,5	;RP0=0, select bank0
   845  0163  1303               	bcf	3,6	;RP1=0, select bank0
   846  0164  0185               	clrf	5	;volatile
   847                           
   848                           ;Main_lab10.c: 177:     PORTD=0;
   849  0165  0188               	clrf	8	;volatile
   850  0166                     l693:
   851                           
   852                           ;Main_lab10.c: 180:     OSCCONbits.IRCF=0b111;
   853  0166  3070               	movlw	112
   854  0167  1683               	bsf	3,5	;RP0=1, select bank1
   855  0168  1303               	bcf	3,6	;RP1=0, select bank1
   856  0169  048F               	iorwf	15,f	;volatile
   857  016A                     l695:
   858                           
   859                           ;Main_lab10.c: 181:     OSCCONbits.SCS=1;
   860  016A  140F               	bsf	15,0	;volatile
   861  016B                     l697:
   862                           
   863                           ;Main_lab10.c: 184:     TXSTAbits.TXEN = 1;
   864  016B  1698               	bsf	24,5	;volatile
   865  016C                     l699:
   866                           
   867                           ;Main_lab10.c: 185:     TXSTAbits.SYNC = 0;
   868  016C  1218               	bcf	24,4	;volatile
   869  016D                     l701:
   870                           
   871                           ;Main_lab10.c: 186:     TXSTAbits.BRGH = 1;
   872  016D  1518               	bsf	24,2	;volatile
   873  016E                     l703:
   874                           
   875                           ;Main_lab10.c: 188:     BAUDCTLbits.BRG16 = 1;
   876  016E  1683               	bsf	3,5	;RP0=1, select bank3
   877  016F  1703               	bsf	3,6	;RP1=1, select bank3
   878  0170  1587               	bsf	7,3	;volatile
   879  0171                     l705:
   880                           
   881                           ;Main_lab10.c: 189:     SPBRGH=0x00;
   882  0171  1683               	bsf	3,5	;RP0=1, select bank1
   883  0172  1303               	bcf	3,6	;RP1=0, select bank1
   884  0173  019A               	clrf	26	;volatile
   885  0174                     l707:
   886                           
   887                           ;Main_lab10.c: 190:     SPBRG=207;
   888  0174  30CF               	movlw	207
   889  0175  0099               	movwf	25	;volatile
   890  0176                     l709:
   891                           
   892                           ;Main_lab10.c: 193:     RCSTAbits.SPEN=1;
   893  0176  1283               	bcf	3,5	;RP0=0, select bank0
   894  0177  1303               	bcf	3,6	;RP1=0, select bank0
   895  0178  1798               	bsf	24,7	;volatile
   896  0179                     l711:
   897                           
   898                           ;Main_lab10.c: 194:     RCSTAbits.RX9=0;
   899  0179  1318               	bcf	24,6	;volatile
   900  017A                     l713:
   901                           
   902                           ;Main_lab10.c: 195:     RCSTAbits.CREN=1;
   903  017A  1618               	bsf	24,4	;volatile
   904  017B                     l715:
   905                           
   906                           ;Main_lab10.c: 196:     TXSTAbits.TXEN = 1;
   907  017B  1683               	bsf	3,5	;RP0=1, select bank1
   908  017C  1303               	bcf	3,6	;RP1=0, select bank1
   909  017D  1698               	bsf	24,5	;volatile
   910  017E                     l717:
   911                           
   912                           ;Main_lab10.c: 200:     INTCONbits.GIE=1;
   913  017E  178B               	bsf	11,7	;volatile
   914  017F                     l719:
   915                           
   916                           ;Main_lab10.c: 201:     INTCONbits.PEIE=1 ;
   917  017F  170B               	bsf	11,6	;volatile
   918  0180                     l721:
   919                           
   920                           ;Main_lab10.c: 203:     PIE1bits.RCIE = 1 ;
   921  0180  168C               	bsf	12,5	;volatile
   922  0181                     l723:
   923                           
   924                           ;Main_lab10.c: 204:     PIR1bits.RCIF = 0;
   925  0181  1283               	bcf	3,5	;RP0=0, select bank0
   926  0182  1303               	bcf	3,6	;RP1=0, select bank0
   927  0183  128C               	bcf	12,5	;volatile
   928  0184                     l87:
   929  0184  0008               	return
   930  0185                     __end_of_setup:
   931                           
   932                           	psect	text2
   933  0185                     __ptext2:	
   934 ;; *************** function _cadena_datos *****************
   935 ;; Defined at:
   936 ;;		line 94 in file "Main_lab10.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  str             1    wreg     PTR unsigned char 
   939 ;;		 -> STR_9(19), STR_8(29), STR_7(19), STR_6(29), 
   940 ;;		 -> STR_5(9), STR_4(29), STR_3(29), STR_2(22), 
   941 ;;		 -> STR_1(23), 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  str             1    4[COMMON] PTR unsigned char 
   944 ;;		 -> STR_9(19), STR_8(29), STR_7(19), STR_6(29), 
   945 ;;		 -> STR_5(9), STR_4(29), STR_3(29), STR_2(22), 
   946 ;;		 -> STR_1(23), 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         1       0       0       0       0
   958 ;;      Temps:          1       0       0       0       0
   959 ;;      Totals:         2       0       0       0       0
   960 ;;Total ram usage:        2 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    2
   963 ;; This function calls:
   964 ;;		_transmision
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _cadena_datos
   972  0185                     _cadena_datos:
   973                           
   974                           ;incstack = 0
   975                           ; Regs used in _cadena_datos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   976                           ;cadena_datos@str stored from wreg
   977  0185  00F4               	movwf	cadena_datos@str
   978  0186                     l785:
   979                           
   980                           ;Main_lab10.c: 94: void cadena_datos(char *str);Main_lab10.c: 95:     {;Main_lab10.c: 96
      +                          :     while(*str != '\0')
   981  0186  2997               	goto	l791
   982  0187                     l787:
   983                           
   984                           ;Main_lab10.c: 97:         {;Main_lab10.c: 98:         transmision(*str);
   985  0187  0874               	movf	cadena_datos@str,w
   986  0188  0084               	movwf	4
   987  0189  120A  118A  2028  120A  118A  	fcall	stringdir
   988  018E  120A  118A  21D5  120A  118A  	fcall	_transmision
   989  0193                     l789:
   990                           
   991                           ;Main_lab10.c: 99:         str++;
   992  0193  3001               	movlw	1
   993  0194  00F3               	movwf	??_cadena_datos
   994  0195  0873               	movf	??_cadena_datos,w
   995  0196  07F4               	addwf	cadena_datos@str,f
   996  0197                     l791:
   997                           
   998                           ;Main_lab10.c: 96:     while(*str != '\0')
   999  0197  0874               	movf	cadena_datos@str,w
  1000  0198  0084               	movwf	4
  1001  0199  120A  118A  2028  120A  118A  	fcall	stringdir
  1002  019E  3A00               	xorlw	0
  1003  019F  1D03               	skipz
  1004  01A0  29A2               	goto	u61
  1005  01A1  29A3               	goto	u60
  1006  01A2                     u61:
  1007  01A2  2987               	goto	l787
  1008  01A3                     u60:
  1009  01A3                     l62:
  1010  01A3  0008               	return
  1011  01A4                     __end_of_cadena_datos:
  1012                           
  1013                           	psect	text3
  1014  01D5                     __ptext3:	
  1015 ;; *************** function _transmision *****************
  1016 ;; Defined at:
  1017 ;;		line 81 in file "Main_lab10.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  datos           1    wreg     unsigned char 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  datos           1    2[COMMON] unsigned char 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1031 ;;      Params:         0       0       0       0       0
  1032 ;;      Locals:         1       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0
  1034 ;;      Totals:         1       0       0       0       0
  1035 ;;Total ram usage:        1 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_cadena_datos
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function _transmision
  1047  01D5                     _transmision:
  1048                           
  1049                           ;incstack = 0
  1050                           ; Regs used in _transmision: [wreg]
  1051                           ;transmision@datos stored from wreg
  1052  01D5  00F2               	movwf	transmision@datos
  1053  01D6                     l679:
  1054  01D6                     l50:	
  1055                           ;Main_lab10.c: 81: void transmision(char datos);Main_lab10.c: 82:     {;Main_lab10.c: 83
      +                          :     while(TXSTAbits.TRMT==0);
  1056                           
  1057  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  1058  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  1059  01D8  1C98               	btfss	24,1	;volatile
  1060  01D9  29DB               	goto	u11
  1061  01DA  29DC               	goto	u10
  1062  01DB                     u11:
  1063  01DB  29D6               	goto	l50
  1064  01DC                     u10:
  1065  01DC                     l681:
  1066                           
  1067                           ;Main_lab10.c: 84:     TXREG=datos;
  1068  01DC  0872               	movf	transmision@datos,w
  1069  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1070  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1071  01DF  0099               	movwf	25	;volatile
  1072  01E0                     l53:
  1073  01E0  0008               	return
  1074  01E1                     __end_of_transmision:
  1075                           
  1076                           	psect	text4
  1077  01E1                     __ptext4:	
  1078 ;; *************** function _isr *****************
  1079 ;; Defined at:
  1080 ;;		line 64 in file "Main_lab10.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		None
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1094 ;;      Params:         0       0       0       0       0
  1095 ;;      Locals:         0       0       0       0       0
  1096 ;;      Temps:          2       0       0       0       0
  1097 ;;      Totals:         2       0       0       0       0
  1098 ;;Total ram usage:        2 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		Interrupt level 1
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _isr
  1109  01E1                     _isr:
  1110  01E1                     i1l47:
  1111  01E1  0871               	movf	??_isr+1,w
  1112  01E2  008A               	movwf	10
  1113  01E3  0E70               	swapf	??_isr,w
  1114  01E4  0083               	movwf	3
  1115  01E5  0EFE               	swapf	btemp,f
  1116  01E6  0E7E               	swapf	btemp,w
  1117  01E7  0009               	retfie
  1118  01E8                     __end_of_isr:
  1119  0003                     
  1120                           	psect	intentry
  1121  0004                     __pintentry:	
  1122                           ;incstack = 0
  1123                           ; Regs used in _isr: []
  1124                           
  1125  0004                     interrupt_function:
  1126  007E                     saved_w	set	btemp
  1127  0004  00FE               	movwf	btemp
  1128  0005  0E03               	swapf	3,w
  1129  0006  00F0               	movwf	??_isr
  1130  0007  080A               	movf	10,w
  1131  0008  00F1               	movwf	??_isr+1
  1132  0009  120A  118A  29E1   	ljmp	_isr
  1133                           
  1134                           	psect	functab
  1135  0022                     __pfunctab:
  1136  0022                     __fptable:
  1137  0022                     fptable:
  1138  0022  00FF               	movwf	(btemp+1)& (0+127)
  1139  0023  3000               	movlw	high fptable
  1140  0024  008A               	movwf	10
  1141  0025  087F               	movf	(btemp+1)& (0+127),w
  1142  0026  0782               	addwf	2,f
  1143  0027                     fpbase:
  1144  0027  2827               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  1145  0028                     __end_of__fptable:
  1146  007E                     btemp	set	126	;btemp
  1147  007E                     wtemp0	set	126
  1148                           
  1149                           	psect	config
  1150                           
  1151                           ;Config register CONFIG1 @ 0x2007
  1152                           ;	Oscillator Selection bits
  1153                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1154                           ;	Watchdog Timer Enable bit
  1155                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1156                           ;	Power-up Timer Enable bit
  1157                           ;	PWRTE = OFF, PWRT disabled
  1158                           ;	RE3/MCLR pin function select bit
  1159                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1160                           ;	Code Protection bit
  1161                           ;	CP = OFF, Program memory code protection is disabled
  1162                           ;	Data Code Protection bit
  1163                           ;	CPD = OFF, Data memory code protection is disabled
  1164                           ;	Brown Out Reset Selection bits
  1165                           ;	BOREN = OFF, BOR disabled
  1166                           ;	Internal External Switchover bit
  1167                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1168                           ;	Fail-Safe Clock Monitor Enabled bit
  1169                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1170                           ;	Low Voltage Programming Enable bit
  1171                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1172                           ;	In-Circuit Debugger Mode bit
  1173                           ;	DEBUG = 0x1, unprogrammed default
  1174  2007                     	org	8199
  1175  2007  38D4               	dw	14548
  1176                           
  1177                           ;Config register CONFIG2 @ 0x2008
  1178                           ;	Brown-out Reset Selection bit
  1179                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1180                           ;	Flash Program Memory Self Write Enable bits
  1181                           ;	WRT = OFF, Write protection off
  1182  2008                     	org	8200
  1183  2008  3FFF               	dw	16383

Data Sizes:
    Strings     189
    Constant    0
    Data        30
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena_datos@str	PTR unsigned char  size(1) Largest target is 29
		 -> STR_9(CODE[19]), STR_8(CODE[29]), STR_7(CODE[19]), STR_6(CODE[29]), 
		 -> STR_5(CODE[9]), STR_4(CODE[29]), STR_3(CODE[29]), STR_2(CODE[22]), 
		 -> STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    _main->_cadena_datos
    _cadena_datos->_transmision

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     357
                                              5 COMMON     2     2      0
                       _cadena_datos
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cadena_datos                                         2     2      0     357
                                              3 COMMON     2     2      0
                        _transmision
 ---------------------------------------------------------------------------------
 (2) _transmision                                          1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena_datos
     _transmision
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu May 06 15:46:24 2021

                      pc 0002                       l50 01D6                       l53 01E0  
                     l62 01A3                       l75 0120                       l68 0108  
                     l87 0184                       l79 0135                       u10 01DC  
                     u11 01DB                       u60 01A3                       u61 01A2  
                     u70 010E                       u71 010D                       u80 0126  
                     u81 0125                       u90 013B                       u91 013A  
                     fsr 0004             fp__recepcion 0000                      l701 016D  
                    l711 0179                      l703 016E                      l721 0180  
                    l713 017A                      l705 0171                      l801 0102  
                    l723 0181                      l715 017B                      l707 0174  
                    l811 0128                      l803 010E                      l717 017E  
                    l709 0176                      l813 012F                      l805 0113  
                    l821 0144                      l719 017F                      l815 013B  
                    l807 011A                      l681 01DC                      l817 013D  
                    l809 0126                      l691 015A                      l693 0166  
                    l679 01D6                      l791 0197                      l695 016A  
                    l847 014C                      l785 0186                      l697 016B  
                    l793 00EB                      l787 0187                      l699 016C  
                    l795 00F0                      l789 0193                      l797 00F6  
                    l799 00FC              _transmision 01D5                      _isr 01E1  
                    fsr0 0004                      indf 0000                     ?_isr 0070  
                   STR_1 00A2                     STR_2 00B9                     STR_3 002E  
                   STR_4 004B                     STR_5 00E2                     STR_6 0068  
                   STR_7 00CF                     STR_8 0085                     STR_9 00CF  
                   i1l47 01E1                     _main 00EB                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188    __size_of_cadena_datos 001F                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088                    _TXREG 0019  
                  _setup 015A                    fpbase 0027                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 015A             _cadena_datos 0185                   ??_main 0075  
                 ?_setup 0070                   _ANSELH 0189                   _SPBRGH 009A  
       __end_of__fptable 0028                   fptable 0022                   fptotal 0003  
                 saved_w 007E  __end_of__initialization 001E           __pcstackCOMMON 0070  
           __pidataBANK0 01A4            __end_of_setup 0185             ?_transmision 0070  
                ??_setup 0072          cadena_datos@str 0074               __pmaintext 00EB  
             __pintentry 0004               __stringtab 0028                  __ptext1 015A  
                __ptext2 0185                  __ptext3 01D5                  __ptext4 01E1  
           __size_of_isr 0007                  _valores 0077     end_of_initialization 001E  
              _RCSTAbits 0018     __size_of_transmision 000C                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 01E8  
             init_fetch0 01C2              __pdataBANK0 0020              __pbssCOMMON 0077  
              ___latbits 0002        __size_of__fptable 0006           _valores_ascii1 0020  
         _valores_ascii2 0035                __pfunctab 0022            ?_cadena_datos 0070  
              __pstrings 0028         transmision@datos 0072           __size_of_setup 002B  
              _recepcion 0000        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C           ??_cadena_datos 0073              __stringbase 002D  
     __end_of__stringtab 002E            ??_transmision 0072                 __fptable 0022  
          __size_of_main 006F               _INTCONbits 000B                 init_ram0 01C6  
   __end_of_cadena_datos 01A4      __end_of_transmision 01E1                 intlevel1 0022  
              stringcode 0028               _OSCCONbits 008F                 stringdir 0028  
               stringtab 0028  
