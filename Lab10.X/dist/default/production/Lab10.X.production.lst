

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 04 13:05:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209  007C                     __pidataBANK0:
   210                           
   211                           ;initializer for _valores_ascii
   212  007C  3441               	retlw	65
   213  007D  3442               	retlw	66
   214  007E  3443               	retlw	67
   215  007F  3444               	retlw	68
   216  0080  3445               	retlw	69
   217  0081  3446               	retlw	70
   218  0082  3447               	retlw	71
   219  0083  3448               	retlw	72
   220  0084  3449               	retlw	73
   221  0085  344A               	retlw	74
   222  0086  344B               	retlw	75
   223  0087  344C               	retlw	76
   224  0088  344D               	retlw	77
   225  0089  344E               	retlw	78
   226  008A  344F               	retlw	79
   227  008B  3450               	retlw	80
   228  008C  3451               	retlw	81
   229  008D  3452               	retlw	82
   230  008E  3453               	retlw	83
   231  008F  3454               	retlw	84
   232  0090  3455               	retlw	85
   233  0091  3456               	retlw	86
   234  0092  3457               	retlw	87
   235  0093  3458               	retlw	88
   236  0094  3459               	retlw	89
   237  0095  345A               	retlw	90
   238  000B                     _INTCONbits	set	11
   239  0018                     _RCSTAbits	set	24
   240  0008                     _PORTD	set	8
   241  0019                     _TXREG	set	25
   242  0005                     _PORTA	set	5
   243  001A                     _RCREG	set	26
   244  0006                     _PORTB	set	6
   245  000C                     _PIR1bits	set	12
   246  008C                     _PIE1bits	set	140
   247  0099                     _SPBRG	set	153
   248  009A                     _SPBRGH	set	154
   249  0098                     _TXSTAbits	set	152
   250  008F                     _OSCCONbits	set	143
   251  0088                     _TRISD	set	136
   252  0085                     _TRISA	set	133
   253  0187                     _BAUDCTLbits	set	391
   254  0188                     _ANSEL	set	392
   255                           
   256                           	psect	cinit
   257  000F                     start_initialization:	
   258                           ; #config settings
   259                           
   260  000F                     __initialization:
   261                           
   262                           ; Initialize objects allocated to BANK0
   263  000F  1383               	bcf	3,7	;select IRP bank0
   264  0010  303A               	movlw	low (__pdataBANK0+26)
   265  0011  00FD               	movwf	btemp+-1
   266  0012  3000               	movlw	high __pidataBANK0
   267  0013  00FE               	movwf	btemp
   268  0014  307C               	movlw	low __pidataBANK0
   269  0015  00FF               	movwf	btemp+1
   270  0016  3020               	movlw	low __pdataBANK0
   271  0017  0084               	movwf	4
   272  0018  120A  118A  20B2  120A  118A  	fcall	init_ram0
   273                           
   274                           ; Clear objects allocated to COMMON
   275  001D  01F6               	clrf	__pbssCOMMON& (0+127)
   276  001E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   277  001F                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280  001F                     __end_of__initialization:
   281  001F  0183               	clrf	3
   282  0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285  0076                     __pbssCOMMON:
   286  0076                     _contador:
   287  0076                     	ds	2
   288                           
   289                           	psect	dataBANK0
   290  0020                     __pdataBANK0:
   291  0020                     _valores_ascii:
   292  0020                     	ds	26
   293                           
   294                           	psect	inittext
   295  00AE                     init_fetch0:	
   296                           ;	Called with low address in FSR and high address in W
   297                           
   298  00AE  087E               	movf	btemp,w
   299  00AF  008A               	movwf	10
   300  00B0  087F               	movf	btemp+1,w
   301  00B1  0082               	movwf	2
   302  00B2                     init_ram0:	
   303                           ;Called with:
   304                           ;	high address of idata address in btemp 
   305                           ;	low address of idata address in btemp+1 
   306                           ;	low address of data in FSR
   307                           ;	high address + 1 of data in btemp-1
   308                           
   309  00B2  120A  118A  20AE  120A  118A  	fcall	init_fetch0
   310  00B7  0080               	movwf	0
   311  00B8  0A84               	incf	4,f
   312  00B9  0804               	movf	4,w
   313  00BA  067D               	xorwf	btemp+-1,w
   314  00BB  1903               	btfsc	3,2
   315  00BC  3400               	retlw	0
   316  00BD  0AFF               	incf	btemp+1,f
   317  00BE  1903               	btfsc	3,2
   318  00BF  0AFE               	incf	btemp,f
   319  00C0  28B2               	goto	init_ram0
   320                           
   321                           	psect	cstackCOMMON
   322  0070                     __pcstackCOMMON:
   323  0070                     ?_setup:
   324  0070                     ?_isr:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ??_isr:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333                           
   334                           ; 1 bytes @ 0x0
   335  0070                     	ds	3
   336  0073                     ??_setup:
   337  0073                     ??_main:	
   338                           ; 1 bytes @ 0x3
   339                           
   340                           
   341                           ; 1 bytes @ 0x3
   342  0073                     	ds	3
   343                           
   344                           	psect	maintext
   345  0023                     __pmaintext:	
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 90 in file "Main_lab10.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : B00/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0
   367 ;;      Temps:          3       0       0       0       0
   368 ;;      Totals:         3       0       0       0       0
   369 ;;Total ram usage:        3 bytes
   370 ;; Hardware stack levels required when called:    2
   371 ;; This function calls:
   372 ;;		_setup
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _main
   380  0023                     _main:
   381  0023                     l691:	
   382                           ;incstack = 0
   383                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   384                           
   385                           
   386                           ;Main_lab10.c: 92:     setup();
   387  0023  120A  118A  2053  120A  118A  	fcall	_setup
   388  0028                     l693:
   389                           
   390                           ;Main_lab10.c: 95:     {;Main_lab10.c: 96:         _delay((unsigned long)((200)*(8000000
      +                          /4000.0)));
   391  0028  3003               	movlw	3
   392  0029  00F5               	movwf	??_main+2
   393  002A  3008               	movlw	8
   394  002B  00F4               	movwf	??_main+1
   395  002C  3077               	movlw	119
   396  002D  00F3               	movwf	??_main
   397  002E                     u47:
   398  002E  0BF3               	decfsz	??_main,f
   399  002F  282E               	goto	u47
   400  0030  0BF4               	decfsz	??_main+1,f
   401  0031  282E               	goto	u47
   402  0032  0BF5               	decfsz	??_main+2,f
   403  0033  282E               	goto	u47
   404  0034                     l695:
   405                           
   406                           ;Main_lab10.c: 97:         if (PIR1bits.TXIF)
   407  0034  1283               	bcf	3,5	;RP0=0, select bank0
   408  0035  1303               	bcf	3,6	;RP1=0, select bank0
   409  0036  1E0C               	btfss	12,4	;volatile
   410  0037  2839               	goto	u21
   411  0038  283A               	goto	u20
   412  0039                     u21:
   413  0039  2828               	goto	l693
   414  003A                     u20:
   415  003A                     l697:
   416                           
   417                           ;Main_lab10.c: 98:         {;Main_lab10.c: 99:             TXREG = valores_ascii[contado
      +                          r] ;
   418  003A  0876               	movf	_contador,w
   419  003B  3E20               	addlw	(low (_valores_ascii| 0))& (0+255)
   420  003C  0084               	movwf	4
   421  003D  1383               	bcf	3,7	;select IRP bank0
   422  003E  0800               	movf	0,w
   423  003F  0099               	movwf	25	;volatile
   424  0040                     l699:
   425                           
   426                           ;Main_lab10.c: 101:             contador++;
   427  0040  3001               	movlw	1
   428  0041  07F6               	addwf	_contador,f
   429  0042  1803               	skipnc
   430  0043  0AF7               	incf	_contador+1,f
   431  0044  3000               	movlw	0
   432  0045  07F7               	addwf	_contador+1,f
   433  0046                     l701:
   434                           
   435                           ;Main_lab10.c: 102:             if (contador==26)
   436  0046  301A               	movlw	26
   437  0047  0676               	xorwf	_contador,w
   438  0048  0477               	iorwf	_contador+1,w
   439  0049  1D03               	btfss	3,2
   440  004A  284C               	goto	u31
   441  004B  284D               	goto	u30
   442  004C                     u31:
   443  004C  2828               	goto	l693
   444  004D                     u30:
   445  004D                     l703:
   446                           
   447                           ;Main_lab10.c: 103:             {;Main_lab10.c: 104:                 contador=0;
   448  004D  01F6               	clrf	_contador
   449  004E  01F7               	clrf	_contador+1
   450  004F  2828               	goto	l693
   451  0050  120A  118A  280C   	ljmp	start
   452  0053                     __end_of_main:
   453                           
   454                           	psect	text1
   455  0053                     __ptext1:	
   456 ;; *************** function _setup *****************
   457 ;; Defined at:
   458 ;;		line 113 in file "Main_lab10.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   472 ;;      Params:         0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; Hardware stack levels required when called:    1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           
   487                           ;psect for function _setup
   488  0053                     _setup:
   489  0053                     l653:	
   490                           ;incstack = 0
   491                           ; Regs used in _setup: [wreg+status,2+status,0]
   492                           
   493                           
   494                           ;Main_lab10.c: 116:     ANSEL = 0;
   495  0053  1683               	bsf	3,5	;RP0=1, select bank3
   496  0054  1703               	bsf	3,6	;RP1=1, select bank3
   497  0055  0188               	clrf	8	;volatile
   498                           
   499                           ;Main_lab10.c: 119:     TRISA = 0;
   500  0056  1683               	bsf	3,5	;RP0=1, select bank1
   501  0057  1303               	bcf	3,6	;RP1=0, select bank1
   502  0058  0185               	clrf	5	;volatile
   503                           
   504                           ;Main_lab10.c: 120:     TRISD = 0;
   505  0059  0188               	clrf	8	;volatile
   506                           
   507                           ;Main_lab10.c: 121:     PORTA=0;
   508  005A  1283               	bcf	3,5	;RP0=0, select bank0
   509  005B  1303               	bcf	3,6	;RP1=0, select bank0
   510  005C  0185               	clrf	5	;volatile
   511                           
   512                           ;Main_lab10.c: 122:     PORTD=0;
   513  005D  0188               	clrf	8	;volatile
   514  005E                     l655:
   515                           
   516                           ;Main_lab10.c: 125:     OSCCONbits.IRCF=0b111;
   517  005E  3070               	movlw	112
   518  005F  1683               	bsf	3,5	;RP0=1, select bank1
   519  0060  1303               	bcf	3,6	;RP1=0, select bank1
   520  0061  048F               	iorwf	15,f	;volatile
   521  0062                     l657:
   522                           
   523                           ;Main_lab10.c: 126:     OSCCONbits.SCS=1;
   524  0062  140F               	bsf	15,0	;volatile
   525  0063                     l659:
   526                           
   527                           ;Main_lab10.c: 130:     TXSTAbits.SYNC = 0;
   528  0063  1218               	bcf	24,4	;volatile
   529  0064                     l661:
   530                           
   531                           ;Main_lab10.c: 131:     TXSTAbits.BRGH = 1;
   532  0064  1518               	bsf	24,2	;volatile
   533  0065                     l663:
   534                           
   535                           ;Main_lab10.c: 133:     BAUDCTLbits.BRG16 = 1;
   536  0065  1683               	bsf	3,5	;RP0=1, select bank3
   537  0066  1703               	bsf	3,6	;RP1=1, select bank3
   538  0067  1587               	bsf	7,3	;volatile
   539  0068                     l665:
   540                           
   541                           ;Main_lab10.c: 134:     SPBRGH=0x00;
   542  0068  1683               	bsf	3,5	;RP0=1, select bank1
   543  0069  1303               	bcf	3,6	;RP1=0, select bank1
   544  006A  019A               	clrf	26	;volatile
   545  006B                     l667:
   546                           
   547                           ;Main_lab10.c: 135:     SPBRG=207;
   548  006B  30CF               	movlw	207
   549  006C  0099               	movwf	25	;volatile
   550  006D                     l669:
   551                           
   552                           ;Main_lab10.c: 138:     RCSTAbits.SPEN=1;
   553  006D  1283               	bcf	3,5	;RP0=0, select bank0
   554  006E  1303               	bcf	3,6	;RP1=0, select bank0
   555  006F  1798               	bsf	24,7	;volatile
   556  0070                     l671:
   557                           
   558                           ;Main_lab10.c: 139:     RCSTAbits.RX9=0;
   559  0070  1318               	bcf	24,6	;volatile
   560  0071                     l673:
   561                           
   562                           ;Main_lab10.c: 140:     RCSTAbits.CREN=1;
   563  0071  1618               	bsf	24,4	;volatile
   564  0072                     l675:
   565                           
   566                           ;Main_lab10.c: 141:     TXSTAbits.TXEN = 1;
   567  0072  1683               	bsf	3,5	;RP0=1, select bank1
   568  0073  1303               	bcf	3,6	;RP1=0, select bank1
   569  0074  1698               	bsf	24,5	;volatile
   570  0075                     l677:
   571                           
   572                           ;Main_lab10.c: 145:     INTCONbits.GIE=1;
   573  0075  178B               	bsf	11,7	;volatile
   574  0076                     l679:
   575                           
   576                           ;Main_lab10.c: 146:     INTCONbits.PEIE=1 ;
   577  0076  170B               	bsf	11,6	;volatile
   578  0077                     l681:
   579                           
   580                           ;Main_lab10.c: 148:     PIE1bits.RCIE = 1 ;
   581  0077  168C               	bsf	12,5	;volatile
   582  0078                     l683:
   583                           
   584                           ;Main_lab10.c: 149:     PIR1bits.RCIF = 0;
   585  0078  1283               	bcf	3,5	;RP0=0, select bank0
   586  0079  1303               	bcf	3,6	;RP1=0, select bank0
   587  007A  128C               	bcf	12,5	;volatile
   588  007B                     l61:
   589  007B  0008               	return
   590  007C                     __end_of_setup:
   591                           
   592                           	psect	text2
   593  0096                     __ptext2:	
   594 ;; *************** function _isr *****************
   595 ;; Defined at:
   596 ;;		line 75 in file "Main_lab10.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          3       0       0       0       0
   613 ;;      Totals:         3       0       0       0       0
   614 ;;Total ram usage:        3 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		Interrupt level 1
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _isr
   625  0096                     _isr:
   626  0096                     i1l687:
   627                           
   628                           ;Main_lab10.c: 78:     if(PIR1bits.RCIF)
   629  0096  1283               	bcf	3,5	;RP0=0, select bank0
   630  0097  1303               	bcf	3,6	;RP1=0, select bank0
   631  0098  1E8C               	btfss	12,5	;volatile
   632  0099  289B               	goto	u1_21
   633  009A  289C               	goto	u1_20
   634  009B                     u1_21:
   635  009B  28A7               	goto	i1l48
   636  009C                     u1_20:
   637  009C                     i1l689:
   638                           
   639                           ;Main_lab10.c: 79:     {;Main_lab10.c: 80:         PORTB= RCREG;
   640  009C  081A               	movf	26,w	;volatile
   641  009D  0086               	movwf	6	;volatile
   642                           
   643                           ;Main_lab10.c: 81:         _delay((unsigned long)((100)*(8000000/4000000.0)));
   644  009E  3042               	movlw	66
   645  009F  00F0               	movwf	??_isr
   646  00A0                     u5_27:
   647  00A0  0BF0               	decfsz	??_isr,f
   648  00A1  28A0               	goto	u5_27
   649  00A2  0000               	nop
   650                           
   651                           ;Main_lab10.c: 82:         PORTA= RCREG;
   652  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   653  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   654  00A5  081A               	movf	26,w	;volatile
   655  00A6  0085               	movwf	5	;volatile
   656  00A7                     i1l48:
   657  00A7  0872               	movf	??_isr+2,w
   658  00A8  008A               	movwf	10
   659  00A9  0E71               	swapf	??_isr+1,w
   660  00AA  0083               	movwf	3
   661  00AB  0EFE               	swapf	btemp,f
   662  00AC  0E7E               	swapf	btemp,w
   663  00AD  0009               	retfie
   664  00AE                     __end_of_isr:
   665  007E                     btemp	set	126	;btemp
   666  007E                     wtemp0	set	126
   667                           
   668                           	psect	intentry
   669  0004                     __pintentry:	
   670                           ;incstack = 0
   671                           ; Regs used in _isr: [wreg]
   672                           
   673  0004                     interrupt_function:
   674  007E                     saved_w	set	btemp
   675  0004  00FE               	movwf	btemp
   676  0005  0E03               	swapf	3,w
   677  0006  00F1               	movwf	??_isr+1
   678  0007  080A               	movf	10,w
   679  0008  00F2               	movwf	??_isr+2
   680  0009  120A  118A  2896   	ljmp	_isr
   681                           
   682                           	psect	config
   683                           
   684                           ;Config register CONFIG1 @ 0x2007
   685                           ;	Oscillator Selection bits
   686                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   687                           ;	Watchdog Timer Enable bit
   688                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   689                           ;	Power-up Timer Enable bit
   690                           ;	PWRTE = OFF, PWRT disabled
   691                           ;	RE3/MCLR pin function select bit
   692                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   693                           ;	Code Protection bit
   694                           ;	CP = OFF, Program memory code protection is disabled
   695                           ;	Data Code Protection bit
   696                           ;	CPD = OFF, Data memory code protection is disabled
   697                           ;	Brown Out Reset Selection bits
   698                           ;	BOREN = OFF, BOR disabled
   699                           ;	Internal External Switchover bit
   700                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   701                           ;	Fail-Safe Clock Monitor Enabled bit
   702                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   703                           ;	Low Voltage Programming Enable bit
   704                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   705                           ;	In-Circuit Debugger Mode bit
   706                           ;	DEBUG = 0x1, unprogrammed default
   707  2007                     	org	8199
   708  2007  38D4               	dw	14548
   709                           
   710                           ;Config register CONFIG2 @ 0x2008
   711                           ;	Brown-out Reset Selection bit
   712                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   713                           ;	Flash Program Memory Self Write Enable bits
   714                           ;	WRT = OFF, Write protection off
   715  2008                     	org	8200
   716  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        26
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 04 13:05:59 2021

                      pc 0002                       l61 007B                       u20 003A  
                     u21 0039                       u30 004D                       u31 004C  
                     u47 002E                       fsr 0004                      l701 0046  
                    l703 004D                      l661 0064                      l653 0053  
                    l671 0070                      l663 0065                      l655 005E  
                    l681 0077                      l673 0071                      l665 0068  
                    l657 0062                      l683 0078                      l675 0072  
                    l667 006B                      l659 0063                      l691 0023  
                    l677 0075                      l669 006D                      l693 0028  
                    l679 0076                      l695 0034                      l697 003A  
                    l699 0040                      _isr 0096                      fsr0 0004  
                    indf 0000                     ?_isr 0070                     i1l48 00A7  
                   u1_20 009C                     u1_21 009B                     u5_27 00A0  
                   _main 0023                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l687 0096                    i1l689 009C                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  _TXREG 0019                    _setup 0053                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0053                   ??_main 0073                   ?_setup 0070  
                 _SPBRGH 009A                   saved_w 007E  __end_of__initialization 001F  
         __pcstackCOMMON 0070             __pidataBANK0 007C            __end_of_setup 007C  
                ??_setup 0073               __pmaintext 0023               __pintentry 0004  
                __ptext1 0053                  __ptext2 0096             __size_of_isr 0018  
   end_of_initialization 001F                _RCSTAbits 0018                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 00AE  
             init_fetch0 00AE              __pdataBANK0 0020              __pbssCOMMON 0076  
              ___latbits 0002           __size_of_setup 0029        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C            _valores_ascii 0020  
               _contador 0076            __size_of_main 0030               _INTCONbits 000B  
               init_ram0 00B2                 intlevel1 0000               _OSCCONbits 008F  
